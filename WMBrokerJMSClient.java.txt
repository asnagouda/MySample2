	import java.util.Hashtable;
	import javax.jms.ConnectionFactory;
	import javax.naming.Context;
	import javax.naming.InitialContext;
	import javax.naming.NamingException;
	import javax.jms.Connection;
	import javax.jms.Message;
	import javax.jms.MessageProducer;
	import javax.jms.Session;
	import javax.jms.Destination;
	import javax.jms.TextMessage;
	import java.io.File;
	import java.io.FileReader;
	import java.io.IOException;

	public class WMBrokerJMSClient{
		Context ic;
		protected ConnectionFactory factory;
		protected Destination destination;		
		Connection conn = null;
		public WMBrokerJMSClient() throws Exception
		{		
			Hashtable jndiHash = new Hashtable(); 
			jndiHash.put("java.naming.factory.initial","com.webmethods.jms.naming.WmJmsNamingCtxFactory"); 
			//jndiHash.put("java.naming.provider.url","wmjmsnaming://SIT_JNDI04@10.20.175.71:6712/EDMIFramework"); 
			jndiHash.put("java.naming.provider.url","wmjmsnaming://GF0D0_Jndi@10.193.63.105:6712/EDMIFramework"); 			
			jndiHash.put("is.jndiAlias.description", "PUSH SMS"); 
		    jndiHash.put("com.webmethods.jms.naming.clientgroup", "admin");
			jndiHash.put("com.webmethods.jms.naming.encrypted", "true"); 
			jndiHash.put("com.webmethods.jms.naming.truststore", "./config/security/certs/edmigftruststore.jks");
			ic = new InitialContext (jndiHash);			
			Object factoryObject = ic.lookup("GroupFunctions_CSL_ConnectionFactory");			
			if (factoryObject instanceof ConnectionFactory)
			{
				factory = (ConnectionFactory)factoryObject;
			}			
			Object destObject = ic.lookup("scbGrpFnCommExtCommSendPushNotifySMSV3ReqT");						   
			if (destObject instanceof Destination)
			{
				destination = (Destination)destObject;
			}			
			System.out.println("JNDI Lookup Success");
			//conn = factory.createConnection();
			conn = factory.createConnection("ldapuser","abc12345");

			conn.setClientID("TestPushSMS");			
			System.out.println("Created Connection");
			Session session = conn.createSession(false,Session.AUTO_ACKNOWLEDGE);
			System.out.println("Created Session");
			MessageProducer sender = session.createProducer(destination); 
			System.out.println("Created Msg Producer");	
			String fullPath;
//			String dirPath = "c:/usr/test";
			String dirPath = "C:/Users/1536605/Desktop/SCB/JMS_Client_Java/TestFiles";
		                File dir = new File(dirPath);
		       	String[] files = dir.list();
			if (files.length == 0) 
			{
		         System.out.println("The directory is empty");
		     } else {
					int i ;
					int j =0;
					String fileContents ;
		           	for (String aFile : files){
		            		// Read the file content....
		            	fullPath = dirPath +"/" +aFile;
		            	System.out.println(fullPath);
		            	FileReader fileReader = new FileReader(fullPath);
		            	fileContents = "";
		            	while((i =  fileReader.read())!=-1){
		            	   char ch = (char)i;
		            	   fileContents = fileContents + ch; 
		     			}     	            	  	
				TextMessage msg = session.createTextMessage(fileContents);
				sender.send(msg);
				j++;
				System.out.println("Posted Successfully Count----->" + " "+ j );		        
		     	System.out.println("out of while");
		        fileReader.close();	       		
				}
			/*
			TextMessage msg = session.createTextMessage("TEST ACK MESSAGE");
			sender.send(msg);
			System.out.println("Posted Successfully to topic");      
		     	 System.out.println("out of while");
		        // fileReader.close();      		
		   	  */         		
		   sender.close();
		   session.close();
		   conn.close();
		   ic.close();
		 }
		}
		public static void main(String[] args) throws Exception{
			WMBrokerJMSClient wmbclient = new WMBrokerJMSClient();
		}
	}
